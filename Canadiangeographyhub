<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Canadian Geography Hub</title>
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
      crossorigin=""
    />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            display: flex;
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
            overflow: hidden; /* Prevent scrolling */
        }
        #map {
            flex: 1;
            height: 100%;
            border-right: 1px solid #ddd;
        }
        #info-panel {
            width: 380px;
            max-width: 40%;
            padding: 2rem;
            background: linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%);
            border-left: 5px solid #4f46e5;
            overflow-y: auto;
            box-shadow: -5px 0 15px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
        }
        #info-panel h2 {
            margin-top: 0;
            color: #312e81;
            font-size: 1.75rem;
            font-weight: 700;
            border-bottom: 2px solid #c7d2fe;
            padding-bottom: 0.5rem;
            margin-bottom: 1rem;
        }

        /* Mode Switcher */
        .mode-switcher {
            display: flex;
            margin-bottom: 1.5rem;
            border-radius: 8px;
            background-color: #e0e7ff;
            padding: 0.25rem;
        }
        .mode-btn {
            flex: 1;
            padding: 0.75rem 0.5rem;
            border: none;
            background-color: transparent;
            color: #4f46e5;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            border-radius: 6px;
            transition: background-color 0.3s, color 0.3s;
        }
        .mode-btn.active {
            background-color: #4f46e5;
            color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* Panels for different modes */
        .mode-panel { display: none; }
        .mode-panel.active { display: block; }

        /* Quiz Mode Styling */
        #question-box {
            background-color: #eef2ff;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #c7d2fe;
            min-height: 120px;
            font-size: 1.1rem;
            color: #334155;
            line-height: 1.6;
            font-weight: 500;
        }
        #result-box {
            border-top: 1px solid #ddd;
            padding-top: 1.5rem;
        }
        #result-box h3, #info-content h3 {
            margin-top: 0; margin-bottom: 1rem; color: #4f46e5; font-size: 1.5rem; font-weight: 600;
        }
        #result-box p, #info-content p {
            font-size: 1rem; line-height: 1.6; margin: 0.5rem 0 1rem 0; color: #334155;
        }
        #result-box p.feedback-correct { color: #166534; font-weight: bold; }
        #result-box p.feedback-incorrect { color: #991b1b; font-weight: bold; }
        #result-box p strong, #info-content p strong { color: #4338ca; }

        /* Explore Mode Styling */
        #static-facts {
            background-color: #eef2ff;
            border-radius: 8px;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #c7d2fe;
        }
        #static-facts h3 {
            margin-top: 0; margin-bottom: 0.75rem; color: #4338ca; font-size: 1.1rem; font-weight: 600;
        }
        #static-facts ul {
            list-style-type: 'üçÅ'; padding-left: 1.2rem; margin: 0; color: #475569; font-size: 0.9rem;
        }
        #static-facts li { padding-left: 0.6rem; margin-bottom: 0.5rem; line-height: 1.5; }
        #static-facts li:last-child { margin-bottom: 0; }
        #info-content { border-top: 1px solid #ddd; padding-top: 1.5rem; }

        /* Button Controls */
        #button-controls { margin-top: 1rem; display: flex; gap: 0.5rem; }
        .game-btn {
            flex: 1; padding: 0.75rem; color: white; border: none; border-radius: 8px; font-size: 1rem;
            font-weight: 600; cursor: pointer; transition: background-color 0.2s, opacity 0.2s;
        }
        #next-question-btn { display: none; background-color: #4f46e5; }
        #next-question-btn:hover { background-color: #4338ca; }
        #hint-btn { background-color: #f59e0b; }
        #hint-btn:hover { background-color: #d97706; }
        #hint-btn:disabled { background-color: #a1a1aa; cursor: not-allowed; }
        #play-again-btn { display: none; background-color: #16a34a; }
        #play-again-btn:hover { background-color: #15803d; }
    </style>
</head>
<body>
    <div id="map"></div>
    <div id="info-panel">
        <h2>Geography Hub</h2>

        <div class="mode-switcher">
            <button id="explore-mode-btn" class="mode-btn active">Explore</button>
            <button id="quiz-mode-btn" class="mode-btn">Quiz</button>
        </div>

        <!-- Explore Mode Panel -->
        <div id="explore-panel" class="mode-panel active">
            <div id="static-facts"><!-- Dynamic Canada Facts --></div>
            <div id="info-content">
                <p>Click a province or territory to discover some quick facts!</p>
            </div>
        </div>

        <!-- Quiz Mode Panel -->
        <div id="quiz-panel" class="mode-panel">
            <div id="question-box"><!-- Question will be loaded here --></div>
            <div id="result-box"><p>Read the clue and click the correct province or territory on the map!</p></div>
            <div id="button-controls">
                <button id="hint-btn" class="game-btn">Get a Hint!</button>
                <button id="next-question-btn" class="game-btn">Next Question &rarr;</button>
                <button id="play-again-btn" class="game-btn">Play Again? ‚Üª</button>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script>
        const map = L.map('map').setView([60, -98], 4);
        L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
            subdomains: 'abcd',
            maxZoom: 19
        }).addTo(map);

        // --- DOM Elements ---
        const exploreModeBtn = document.getElementById('explore-mode-btn');
        const quizModeBtn = document.getElementById('quiz-mode-btn');
        const explorePanel = document.getElementById('explore-panel');
        const quizPanel = document.getElementById('quiz-panel');
        const infoContent = document.getElementById('info-content');
        const staticFactsDiv = document.getElementById('static-facts');
        const questionBox = document.getElementById('question-box');
        const resultBox = document.getElementById('result-box');
        const nextQuestionBtn = document.getElementById('next-question-btn');
        const hintBtn = document.getElementById('hint-btn');
        const playAgainBtn = document.getElementById('play-again-btn');
        let geojson;

        // --- Game State ---
        let currentMode = 'explore'; // 'explore' or 'quiz'
        let isQuizActive = true;
        let correctlyGuessedProvinces = [];
        let currentQuestion = {};
        let currentHintIndex = 0;
        let availableQuestions = [];
        let lastFactIndex = -1;

        // --- Data (Combined) ---
        const provinceNames = ['British Columbia', 'Alberta', 'Saskatchewan', 'Manitoba', 'Ontario', 'Quebec', 'New Brunswick', 'Nova Scotia', 'Prince Edward Island', 'Newfoundland and Labrador', 'Yukon', 'Northwest Territories', 'Nunavut'];

        const provinceData = {
            'British Columbia': { capital: 'Victoria', population: '5.4 Million', funFact: 'The Great Bear Rainforest is the only place to see the white Kermode (Spirit) bear.' },
            'Alberta': { capital: 'Edmonton', population: '4.5 Million', funFact: 'Is home to the world\'s largest dinosaur model in the town of Drumheller.' },
            'Saskatchewan': { capital: 'Regina', population: '1.2 Million', funFact: 'Has more roads than any other province, enough to circle the Earth four times!' },
            'Manitoba': { capital: 'Winnipeg', population: '1.4 Million', funFact: 'Churchill, Manitoba is famously known as the "Polar Bear Capital of the World".' },
            'Ontario': { capital: 'Toronto', population: '15.3 Million', funFact: 'Contains over 250,000 lakes, holding about one-fifth of the world\'s fresh water.' },
            'Quebec': { capital: 'Quebec City', population: '8.7 Million', funFact: 'Produces over 70% of the entire world\'s supply of maple syrup. üçÅ' },
            'New Brunswick': { capital: 'Fredericton', population: '800,000', funFact: 'The Bay of Fundy has the highest tides on Earth, up to 16 meters (52 ft).' },
            'Nova Scotia': { capital: 'Halifax', population: '1 Million', funFact: 'Its name is Latin for "New Scotland", and its flag is the reverse of Scotland\'s flag.' },
            'Prince Edward Island': { capital: 'Charlottetown', population: '175,000', funFact: 'The island\'s famous red soil gets its color from high iron oxide (rust).' },
            'Newfoundland and Labrador': { capital: 'St. John\'s', population: '530,000', funFact: 'Received the first transatlantic wireless signal in 1901.' },
            'Yukon': { capital: 'Whitehorse', population: '44,000', funFact: 'Is home to Mount Logan, the highest mountain in all of Canada.' },
            'Northwest Territories': { capital: 'Yellowknife', population: '45,000', funFact: 'You can see the Aurora Borealis for up to 240 nights a year here.' },
            'Nunavut': { capital: 'Iqaluit', population: '40,000', funFact: 'Makes up 20% of Canada\'s landmass but has less than 0.1% of its population.' }
        };

        const questions = [
            { hints: ["This province produces over 70% of the world's maple syrup. üçÅ", "Its largest city is Montreal.", "Its capital is a historic walled city."], answer: 'Quebec' },
            { hints: ["This prairie province is known as the 'Polar Bear Capital of the World'.", "Its capital city is Winnipeg.", "It is located in the longitudinal centre of Canada."], answer: 'Manitoba' },
            { hints: ["This Maritime province has the highest tides on Earth in the Bay of Fundy.", "It's the only officially bilingual province.", "The Appalachian Mountains run through this province."], answer: 'New Brunswick' },
            { hints: ["This territory is home to Mount Logan, Canada's highest mountain.", "It's famous for the Klondike Gold Rush of the 1890s.", "Its capital is Whitehorse."], answer: 'Yukon' },
            { hints: ["This province contains over 250,000 lakes.", "Canada's capital city, Ottawa, is located here.", "It is home to the CN Tower."], answer: 'Ontario' },
            { hints: ["This territory is where you can see the Aurora Borealis almost 240 nights a year.", "Its capital is Yellowknife.", "It's known as the 'Diamond Capital of North America'."], answer: 'Northwest Territories' },
            { hints: ["Find the province that is home to the world's largest dinosaur model in its badlands.", "Its two largest cities are Calgary and Edmonton.", "It's famous for the Calgary Stampede."], answer: 'Alberta' },
            { hints: ["This island province's distinct red soil gets its color from high iron oxide content.", "It's the setting for the book 'Anne of Green Gables'.", "It is the smallest province in both land area and population."], answer: 'Prince Edward Island' },
            { hints: ["This Atlantic province's name is Latin for 'New Scotland'.", "It features the famous Cabot Trail, a scenic roadway.", "It is a peninsula connected to New Brunswick."], answer: 'Nova Scotia' },
            { hints: ["Known for its stunning Pacific coastline and mountain ranges.", "Its largest city is Vancouver.", "Hosted the 2010 Winter Olympics."], answer: 'British Columbia' },
            { hints: ["This prairie province is known as the 'Land of Living Skies'.", "It is the only province whose borders are entirely man-made lines.", "The RCMP have their main training academy in its capital, Regina."], answer: 'Saskatchewan' },
            { hints: ["This is Canada's newest, largest, and northernmost territory.", "It was officially separated from the Northwest Territories in 1999.", "The name means 'our land' in the Inuktitut language."], answer: 'Nunavut' },
            { hints: ["This is Canada's most easterly province.", "It has its own unique time zone.", "Its capital, St. John's, is one of the oldest cities in North America."], answer: 'Newfoundland and Labrador' }
        ];

        const incorrectFeedback = ["Not quite! Give it another go.", "That's not the one. Try again!", "Oops, wrong province! Have another guess."];

        const canadaFactSets = [
            ["World's 2nd largest country by area.", "Has the longest coastline on the planet.", "Contains more lakes than the rest of the world combined!"],
            ["The national sports are hockey (winter) and lacrosse (summer).", "The lowest recorded temperature was -63¬∞C in Snag, Yukon.", "The official phone number is 1-800-O-CANADA."],
            ["The motto, 'A Mari Usque Ad Mare', means 'From Sea to Sea'.", "Canadians consume the most doughnuts per capita.", "The beaver is the national animal of Canada."]
        ];

        // --- Mode Switching Logic ---
        function setMode(mode) {
            currentMode = mode;
            if (mode === 'explore') {
                exploreModeBtn.classList.add('active');
                quizModeBtn.classList.remove('active');
                explorePanel.classList.add('active');
                quizPanel.classList.remove('active');
                geojson.resetStyle(); // Reset map styles for explore mode
                showRandomCanadaFacts();
            } else { // quiz mode
                exploreModeBtn.classList.remove('active');
                quizModeBtn.classList.add('active');
                explorePanel.classList.remove('active');
                quizPanel.classList.add('active');
                if (availableQuestions.length === 0) {
                    resetQuiz();
                }
                geojson.resetStyle();
            }
        }

        exploreModeBtn.addEventListener('click', () => setMode('explore'));
        quizModeBtn.addEventListener('click', () => setMode('quiz'));


        // --- Explore Mode Functions ---
        function showRandomCanadaFacts() {
            let randomIndex;
            do {
                randomIndex = Math.floor(Math.random() * canadaFactSets.length);
            } while (canadaFactSets.length > 1 && randomIndex === lastFactIndex);
            lastFactIndex = randomIndex;
            const factSet = canadaFactSets[randomIndex];
            const listItems = factSet.map(fact => `<li>${fact}</li>`).join('');
            staticFactsDiv.innerHTML = `<h3>Canada Quick Facts üá®üá¶</h3><ul>${listItems}</ul>`;
        }

        function showProvinceInfo(name) {
            showRandomCanadaFacts();
            const provinceKey = provinceNames.find(p => name.includes(p)) || name;
            const data = provinceData[provinceKey];
            if (data) {
                infoContent.innerHTML = `
                    <h3>${provinceKey}</h3>
                    <p><strong>Capital:</strong> ${data.capital}</p>
                    <p><strong>Population:</strong> ~${data.population}</p>
                    <p><strong>Fun Fact:</strong> ${data.funFact}</p>
                `;
            }
        }

        // --- Quiz Mode Functions ---
        function resetQuiz() {
            correctlyGuessedProvinces = [];
            availableQuestions = [...questions];
            geojson.resetStyle();
            loadNewQuestion();
        }

        function loadNewQuestion() {
            if (availableQuestions.length === 0) {
                questionBox.innerHTML = "You've answered all the questions!";
                resultBox.innerHTML = "<h2>Congratulations!</h2><p>You've completed the Canada Map Challenge!</p>";
                nextQuestionBtn.style.display = 'none';
                hintBtn.style.display = 'none';
                playAgainBtn.style.display = 'block';
                return;
            }
            isQuizActive = true;
            currentHintIndex = 0;
            const questionIndex = Math.floor(Math.random() * availableQuestions.length);
            currentQuestion = availableQuestions.splice(questionIndex, 1)[0];
            questionBox.textContent = currentQuestion.hints[currentHintIndex];
            resultBox.innerHTML = '<p>Read the clue and click the correct province or territory on the map!</p>';
            nextQuestionBtn.style.display = 'none';
            hintBtn.style.display = 'block';
            playAgainBtn.style.display = 'none';
            hintBtn.disabled = false;
        }

        function showHint() {
            if (!isQuizActive) return;
            currentHintIndex++;
            if (currentHintIndex < currentQuestion.hints.length) {
                questionBox.textContent = currentQuestion.hints[currentHintIndex];
            }
            if (currentHintIndex >= currentQuestion.hints.length - 1) {
                hintBtn.disabled = true;
            }
        }

        function checkAnswer(provinceName) {
            if (!isQuizActive) return;
            const provinceKey = provinceNames.find(p => provinceName.includes(p)) || provinceName;

            if (provinceKey === currentQuestion.answer) {
                isQuizActive = false;
                correctlyGuessedProvinces.push(provinceKey);
                geojson.resetStyle(); // Update map colors
                const data = provinceData[provinceKey];
                resultBox.innerHTML = `
                    <p class="feedback-correct">Correct! It's ${provinceKey}.</p>
                    <h3>${provinceKey}</h3>
                    <p><strong>Capital:</strong> ${data.capital}</p>
                    <p><strong>Population:</strong> ~${data.population}</p>
                `;
                nextQuestionBtn.style.display = 'block';
                hintBtn.style.display = 'none';
            } else {
                const randomFeedback = incorrectFeedback[Math.floor(Math.random() * incorrectFeedback.length)];
                resultBox.innerHTML = `<p class="feedback-incorrect">${randomFeedback}</p>`;
            }
        }

        nextQuestionBtn.addEventListener('click', loadNewQuestion);
        hintBtn.addEventListener('click', showHint);
        playAgainBtn.addEventListener('click', resetQuiz);

        // --- Map Interaction & Styling ---
        function getColor(name) {
            const palette = ['#e57373', '#ffb74d', '#fff176', '#aed581', '#64b5f6', '#ba68c8', '#ff8a65', '#f06292', '#dce775', '#4dd0e1', '#bcaaa4', '#a5d6a7', '#ce93d8'];
            const provinceKey = provinceNames.find(p => name.includes(p)) || name;
            const idx = provinceNames.indexOf(provinceKey);
            return idx >= 0 ? palette[idx % palette.length] : '#bdbdbd';
        }

        function style(feature) {
            const provinceName = feature.properties.name;
            const provinceKey = provinceNames.find(p => provinceName.includes(p)) || provinceName;
            let fillColor = '#D3D3D3'; // Default color

            if (currentMode === 'explore') {
                fillColor = getColor(provinceName);
            } else if (currentMode === 'quiz' && correctlyGuessedProvinces.includes(provinceKey)) {
                fillColor = getColor(provinceName);
            }

            return {
                fillColor: fillColor,
                weight: 2, opacity: 1, color: 'white', fillOpacity: 0.7
            };
        }

        function highlightFeature(e) {
            if (currentMode === 'quiz' && !isQuizActive) return; // Don't highlight after correct answer in quiz
            const layer = e.target;
            layer.setStyle({ weight: 4, color: '#4f46e5', dashArray: '', fillOpacity: 0.85 });
            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) { layer.bringToFront(); }
        }

        function resetHighlight(e) { geojson.resetStyle(e.target); }

        function onMapClick(feature) {
            const provinceName = feature.properties.name;
            if (currentMode === 'explore') {
                showProvinceInfo(provinceName);
            } else { // quiz mode
                checkAnswer(provinceName);
            }
        }

        function onEachFeature(feature, layer) {
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: () => onMapClick(feature)
            });
        }

        // --- Initial Load ---
        fetch('https://cdn.jsdelivr.net/gh/codeforgermany/click_that_hood@master/public/data/canada.geojson')
            .then(res => res.json())
            .then(data => {
                geojson = L.geoJson(data, { style, onEachFeature }).addTo(map);
                setMode('explore'); // Initialize in Explore mode
            })
            .catch(err => {
                console.error('GeoJSON load error:', err);
                infoContent.innerHTML = '<p>Error loading map data. Please refresh.</p>';
            });
    </script>
</body>
</html>

